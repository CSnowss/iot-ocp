{
  "apiVersion": "v1",
  "kind": "Template",
  "labels": {},
  "metadata": {
    "annotations": {
      "description": "FIS Generic Template",
      "iconClass": "icon-openjdk"
    },
    "labels": {},
    "name": "integration-fis"
  },
  "parameters": [
    {
      "name": "APP_NAME",
      "value": "integration-fis",
      "description": "Application Name"
    },
    {
      "name": "GIT_REPO",
      "required": true,
      "value": "https://github.com/sabre1041/iot-ocp.git",
      "description": "Git repository, required"
    },
    {
      "name": "GIT_REF",
      "value": "master",
      "description": "Git ref to build"
    },
    {
      "name": "GIT_CONTEXT_DIR",
      "value": "iot-ocp-routing-service",
      "description": "Git context directory"
    },
    {
      "name": "BUILDER_VERSION",
      "value": "2.0",
      "description": "Builder version"
    },
    {
      "name": "MAVEN_ARGS",
      "value": "clean install -DskipTests",
      "description": "Arguments passed to mvn in the build"
    },
    {
      "name": "MAVEN_ARGS_APPEND",
      "description": "Extra arguments passed to mvn, e.g. for multi-module builds"
    },
    {
      "name": "ARTIFACT_DIR",
      "description": "Directory containing build artifacts."
    },
    {
      "description": "Namespace in which the Fuse ImageStreams are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
      "name": "IMAGE_STREAM_NAMESPACE",
      "value": "openshift",
      "required": true
    },
    {
      "name": "POSTGRESQL_SECRET",
      "required": true,
      "value": "postgresql",
      "description": "Name of the Postgresql Secret"
    },
    {
      "name": "RULES_APP",
      "required": true,
      "value": "rules-brms",
      "description": "Name of the Rules Application"
    },
    {
      "name": "AMQ_SECRET",
      "required": true,
      "value": "broker",
      "description": "Name of the AMQ Secret"
    }
  ],
  "objects": [
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
        },
        "labels": {
          "container": "karaf",
          "component": "${APP_NAME}"
        },
        "name": "${APP_NAME}"
      },
      "spec": {
        "clusterIP": "None",
        "deprecatedPublicIPs": [],
        "ports": [
          {
            "port": 9412,
            "protocol": "TCP",
            "targetPort": 8181
          }
        ],
        "selector": {
          "container": "karaf",
          "component": "${APP_NAME}"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APP_NAME}",
        "creationTimestamp": null,
        "labels": {
          "component": "${APP_NAME}",
          "container": "karaf"
        }
      },
      "spec": {},
      "status": {
        "dockerImageRepository": ""
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APP_NAME}",
        "creationTimestamp": null,
        "labels": {
          "component": "${APP_NAME}",
          "container": "karaf"
        }
      },
      "spec": {
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChange": {}
          }
        ],
        "source": {
          "type": "Git",
          "git": {
            "uri": "${GIT_REPO}",
            "ref": "${GIT_REF}"
          },
          "contextDir": "${GIT_CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "namespace": "${IMAGE_STREAM_NAMESPACE}",
              "name": "fis-karaf-openshift:${BUILDER_VERSION}"
            },
            "forcePull": true,
            "env": [
              {
                "name": "ARTIFACT_DIR",
                "value": "${ARTIFACT_DIR}"
              },
              {
                "name": "MAVEN_ARGS",
                "value": "${MAVEN_ARGS}"
              },
              {
                "name": "MAVEN_ARGS_APPEND",
                "value": "${MAVEN_ARGS_APPEND}"
              }
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${APP_NAME}:latest"
          }
        }
      },
      "status": {
        "lastVersion": 0
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APP_NAME}",
        "creationTimestamp": null,
        "labels": {
          "component": "${APP_NAME}",
          "container": "karaf"
        }
      },
      "spec": {
        "strategy": {
          "resources": {}
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APP_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${APP_NAME}:latest"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "component": "${APP_NAME}",
          "container": "karaf",
          "deploymentconfig": "${APP_NAME}"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "component": "${APP_NAME}",
              "container": "karaf",
              "deploymentconfig": "${APP_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${APP_NAME}",
                "image": "${APP_NAME}",
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-c",
                      "(curl -f 127.0.0.1:8778) >/dev/null 2>&1; test $? != 7"
                    ]
                  },
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 5
                },
                "ports": [
                  {
                    "containerPort": 8181,
                    "name": "http"
                  },
                  {
                    "containerPort": 8778,
                    "name": "jolokia"
                  }
                ],
                "env": [
                    {
                        "name": "APP_ID",
                        "valueFrom": {
                            "fieldRef": {
                                "apiVersion": "v1",
                                "fieldPath": "metadata.name"
                            }
                        }
                    },
                    {
                        "name": "KIE_APP_NAME",
                        "value": "${RULES_APP}"
                    },
                  {
                      "name": "KIE_APP_USER",
                      "valueFrom": {
                          "secretKeyRef": {
                              "key": "kie-server-user",
                              "name": "${RULES_APP}"
                          }
                      }
                  },
                  {
                      "name": "KIE_APP_PASSWORD",
                      "valueFrom": {
                          "secretKeyRef": {
                              "key": "kie-server-password",
                              "name": "${RULES_APP}"
                          }
                      }
                  },
                  {
                      "name": "BROKER_AMQ_USERNAME",
                      "valueFrom": {
                          "secretKeyRef": {
                              "key": "amq-user",
                              "name": "${AMQ_SECRET}"
                          }
                      }
                  },
                  {
                      "name": "BROKER_AMQ_PASSWORD",
                      "valueFrom": {
                          "secretKeyRef": {
                              "key": "amq-password",
                              "name": "${AMQ_SECRET}"
                          }
                      }
                  },
                  {
                      "name": "POSTGRESQL_USER",
                      "valueFrom": {
                          "secretKeyRef": {
                              "key": "postgresql-user",
                              "name": "${POSTGRESQL_SECRET}"
                          }
                      }
                  },
                  {
                      "name": "POSTGRESQL_PASSWORD",
                      "valueFrom": {
                          "secretKeyRef": {
                              "key": "postgresql-password",
                              "name": "${POSTGRESQL_SECRET}"
                          }
                      }
                  },
                  {
                      "name": "POSTGRESQL_DATABASE",
                      "valueFrom": {
                          "secretKeyRef": {
                              "key": "postgresql-database",
                              "name": "${POSTGRESQL_SECRET}"
                          }
                      }
                  }
                ]
              }
            ]
          }
        }
      },
      "status": {}
    }
  ]
}
